// sensory.api.assistant

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.21.12
// source: v1/assistant/assistant.proto

package assistant

import (
	_ "github.com/envoyproxy/protoc-gen-validate/validate"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type AssistantPostProcessingAction int32

const (
	// Default value to perform no action
	AssistantPostProcessingAction_NOT_SET AssistantPostProcessingAction = 0
	// Indicates the final message has been sent. The server will wrap up and close the stream.
	AssistantPostProcessingAction_FINAL AssistantPostProcessingAction = 1
)

// Enum value maps for AssistantPostProcessingAction.
var (
	AssistantPostProcessingAction_name = map[int32]string{
		0: "NOT_SET",
		1: "FINAL",
	}
	AssistantPostProcessingAction_value = map[string]int32{
		"NOT_SET": 0,
		"FINAL":   1,
	}
)

func (x AssistantPostProcessingAction) Enum() *AssistantPostProcessingAction {
	p := new(AssistantPostProcessingAction)
	*p = x
	return p
}

func (x AssistantPostProcessingAction) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (AssistantPostProcessingAction) Descriptor() protoreflect.EnumDescriptor {
	return file_v1_assistant_assistant_proto_enumTypes[0].Descriptor()
}

func (AssistantPostProcessingAction) Type() protoreflect.EnumType {
	return &file_v1_assistant_assistant_proto_enumTypes[0]
}

func (x AssistantPostProcessingAction) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use AssistantPostProcessingAction.Descriptor instead.
func (AssistantPostProcessingAction) EnumDescriptor() ([]byte, []int) {
	return file_v1_assistant_assistant_proto_rawDescGZIP(), []int{0}
}

// Request to process a message with a virutal assistant
type AssistantMessageRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The streaming request, which is either a config or content.
	//
	// Types that are assignable to StreamingRequest:
	//
	//	*AssistantMessageRequest_Config
	//	*AssistantMessageRequest_Message
	StreamingRequest isAssistantMessageRequest_StreamingRequest `protobuf_oneof:"streamingRequest"`
	// Message used to instruct the assistant engine to process audio data.
	PostProcessingAction *AssistantPostProcessingActionRequest `protobuf:"bytes,10,opt,name=postProcessingAction,proto3" json:"postProcessingAction,omitempty"`
}

func (x *AssistantMessageRequest) Reset() {
	*x = AssistantMessageRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_assistant_assistant_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AssistantMessageRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AssistantMessageRequest) ProtoMessage() {}

func (x *AssistantMessageRequest) ProtoReflect() protoreflect.Message {
	mi := &file_v1_assistant_assistant_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AssistantMessageRequest.ProtoReflect.Descriptor instead.
func (*AssistantMessageRequest) Descriptor() ([]byte, []int) {
	return file_v1_assistant_assistant_proto_rawDescGZIP(), []int{0}
}

func (m *AssistantMessageRequest) GetStreamingRequest() isAssistantMessageRequest_StreamingRequest {
	if m != nil {
		return m.StreamingRequest
	}
	return nil
}

func (x *AssistantMessageRequest) GetConfig() *AssistantMessageConfig {
	if x, ok := x.GetStreamingRequest().(*AssistantMessageRequest_Config); ok {
		return x.Config
	}
	return nil
}

func (x *AssistantMessageRequest) GetMessage() *AssistantMessage {
	if x, ok := x.GetStreamingRequest().(*AssistantMessageRequest_Message); ok {
		return x.Message
	}
	return nil
}

func (x *AssistantMessageRequest) GetPostProcessingAction() *AssistantPostProcessingActionRequest {
	if x != nil {
		return x.PostProcessingAction
	}
	return nil
}

type isAssistantMessageRequest_StreamingRequest interface {
	isAssistantMessageRequest_StreamingRequest()
}

type AssistantMessageRequest_Config struct {
	// Provides information that specifies how to process the
	// request. The first `CreateEnrollmentRequest` message must contain a
	// `config`  message.
	Config *AssistantMessageConfig `protobuf:"bytes,1,opt,name=config,proto3,oneof"`
}

type AssistantMessageRequest_Message struct {
	// The data to be recognized. Sequential chunks of data are sent
	// in sequential `AssistantMessageRequest` messages. The first
	// `AssistantMessageRequest` message must not contain `config` data
	// and all subsequent `AssistantMessageRequest` messages must contain
	// `message` data.
	Message *AssistantMessage `protobuf:"bytes,2,opt,name=message,proto3,oneof"`
}

func (*AssistantMessageRequest_Config) isAssistantMessageRequest_StreamingRequest() {}

func (*AssistantMessageRequest_Message) isAssistantMessageRequest_StreamingRequest() {}

// A message from the assistant
type AssistantMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Message:
	//
	//	*AssistantMessage_Text
	//	*AssistantMessage_AudioContent
	Message isAssistantMessage_Message `protobuf_oneof:"message"`
}

func (x *AssistantMessage) Reset() {
	*x = AssistantMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_assistant_assistant_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AssistantMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AssistantMessage) ProtoMessage() {}

func (x *AssistantMessage) ProtoReflect() protoreflect.Message {
	mi := &file_v1_assistant_assistant_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AssistantMessage.ProtoReflect.Descriptor instead.
func (*AssistantMessage) Descriptor() ([]byte, []int) {
	return file_v1_assistant_assistant_proto_rawDescGZIP(), []int{1}
}

func (m *AssistantMessage) GetMessage() isAssistantMessage_Message {
	if m != nil {
		return m.Message
	}
	return nil
}

func (x *AssistantMessage) GetText() string {
	if x, ok := x.GetMessage().(*AssistantMessage_Text); ok {
		return x.Text
	}
	return ""
}

func (x *AssistantMessage) GetAudioContent() []byte {
	if x, ok := x.GetMessage().(*AssistantMessage_AudioContent); ok {
		return x.AudioContent
	}
	return nil
}

type isAssistantMessage_Message interface {
	isAssistantMessage_Message()
}

type AssistantMessage_Text struct {
	Text string `protobuf:"bytes,1,opt,name=text,proto3,oneof"`
}

type AssistantMessage_AudioContent struct {
	// Audio content if requested
	AudioContent []byte `protobuf:"bytes,2,opt,name=audioContent,proto3,oneof"`
}

func (*AssistantMessage_Text) isAssistantMessage_Message() {}

func (*AssistantMessage_AudioContent) isAssistantMessage_Message() {}

// An intent based on an AssistantMessageRequest
type Intent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Name of the intent
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// Confidence of the intent as indicated by the engine
	Confidence float64 `protobuf:"fixed64,2,opt,name=confidence,proto3" json:"confidence,omitempty"`
}

func (x *Intent) Reset() {
	*x = Intent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_assistant_assistant_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Intent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Intent) ProtoMessage() {}

func (x *Intent) ProtoReflect() protoreflect.Message {
	mi := &file_v1_assistant_assistant_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Intent.ProtoReflect.Descriptor instead.
func (*Intent) Descriptor() ([]byte, []int) {
	return file_v1_assistant_assistant_proto_rawDescGZIP(), []int{2}
}

func (x *Intent) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Intent) GetConfidence() float64 {
	if x != nil {
		return x.Confidence
	}
	return 0
}

// Response from a virtual assistant
type AssistantMessageResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Text string `protobuf:"bytes,1,opt,name=text,proto3" json:"text,omitempty"`
	// Audio content if requested
	AudioContent []byte `protobuf:"bytes,2,opt,name=audioContent,proto3" json:"audioContent,omitempty"`
	// The primary intent selected by the engine
	Intent *Intent `protobuf:"bytes,3,opt,name=intent,proto3" json:"intent,omitempty"`
	// A list of the ranked intents as determined by the engine
	Intents []*Intent `protobuf:"bytes,4,rep,name=intents,proto3" json:"intents,omitempty"`
	// Indicates the audio is done streaming
	IsAudioComplete bool `protobuf:"varint,5,opt,name=isAudioComplete,proto3" json:"isAudioComplete,omitempty"`
	// Message used to instruct the assistant engine to process audio data.
	PostProcessingAction *AssistantPostProcessingActionResponse `protobuf:"bytes,10,opt,name=postProcessingAction,proto3" json:"postProcessingAction,omitempty"`
}

func (x *AssistantMessageResponse) Reset() {
	*x = AssistantMessageResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_assistant_assistant_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AssistantMessageResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AssistantMessageResponse) ProtoMessage() {}

func (x *AssistantMessageResponse) ProtoReflect() protoreflect.Message {
	mi := &file_v1_assistant_assistant_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AssistantMessageResponse.ProtoReflect.Descriptor instead.
func (*AssistantMessageResponse) Descriptor() ([]byte, []int) {
	return file_v1_assistant_assistant_proto_rawDescGZIP(), []int{3}
}

func (x *AssistantMessageResponse) GetText() string {
	if x != nil {
		return x.Text
	}
	return ""
}

func (x *AssistantMessageResponse) GetAudioContent() []byte {
	if x != nil {
		return x.AudioContent
	}
	return nil
}

func (x *AssistantMessageResponse) GetIntent() *Intent {
	if x != nil {
		return x.Intent
	}
	return nil
}

func (x *AssistantMessageResponse) GetIntents() []*Intent {
	if x != nil {
		return x.Intents
	}
	return nil
}

func (x *AssistantMessageResponse) GetIsAudioComplete() bool {
	if x != nil {
		return x.IsAudioComplete
	}
	return false
}

func (x *AssistantMessageResponse) GetPostProcessingAction() *AssistantPostProcessingActionResponse {
	if x != nil {
		return x.PostProcessingAction
	}
	return nil
}

// Provides information for an audio-based enrollment
type AssistantMessageConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The unique user Identifer. This value should be a unique email address or username known by the user.
	UserId string `protobuf:"bytes,2,opt,name=userId,proto3" json:"userId,omitempty"`
	// The unique device Identifer. This value should be something retrieved by the devie prior to enrollment (like MAC Address)
	// this value is used to identify a device uniquely across multiple enrollments
	DeviceId string `protobuf:"bytes,3,opt,name=deviceId,proto3" json:"deviceId,omitempty"`
	// Name of background model to be enrolled in
	// Background models can be retrieved from the GetModels() gRPC call
	ModelName string `protobuf:"bytes,4,opt,name=modelName,proto3" json:"modelName,omitempty"`
	// Indicates if audio content should be returned along with text and intent content
	IncludeAudioResponse bool `protobuf:"varint,5,opt,name=includeAudioResponse,proto3" json:"includeAudioResponse,omitempty"`
}

func (x *AssistantMessageConfig) Reset() {
	*x = AssistantMessageConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_assistant_assistant_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AssistantMessageConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AssistantMessageConfig) ProtoMessage() {}

func (x *AssistantMessageConfig) ProtoReflect() protoreflect.Message {
	mi := &file_v1_assistant_assistant_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AssistantMessageConfig.ProtoReflect.Descriptor instead.
func (*AssistantMessageConfig) Descriptor() ([]byte, []int) {
	return file_v1_assistant_assistant_proto_rawDescGZIP(), []int{4}
}

func (x *AssistantMessageConfig) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *AssistantMessageConfig) GetDeviceId() string {
	if x != nil {
		return x.DeviceId
	}
	return ""
}

func (x *AssistantMessageConfig) GetModelName() string {
	if x != nil {
		return x.ModelName
	}
	return ""
}

func (x *AssistantMessageConfig) GetIncludeAudioResponse() bool {
	if x != nil {
		return x.IncludeAudioResponse
	}
	return false
}

// Action that can be passed along with any audio data. This message instructs the audio engine to
// perfrom some kind of action after the data is processed.
type AssistantPostProcessingActionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// ID that can be set by the client. This ID will be returned to the client upon a successful flush or reset.
	ActionId string `protobuf:"bytes,1,opt,name=actionId,proto3" json:"actionId,omitempty"`
	// The specific action that is being requested.
	Action AssistantPostProcessingAction `protobuf:"varint,2,opt,name=action,proto3,enum=sensory.api.v1.assistant.AssistantPostProcessingAction" json:"action,omitempty"`
}

func (x *AssistantPostProcessingActionRequest) Reset() {
	*x = AssistantPostProcessingActionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_assistant_assistant_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AssistantPostProcessingActionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AssistantPostProcessingActionRequest) ProtoMessage() {}

func (x *AssistantPostProcessingActionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_v1_assistant_assistant_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AssistantPostProcessingActionRequest.ProtoReflect.Descriptor instead.
func (*AssistantPostProcessingActionRequest) Descriptor() ([]byte, []int) {
	return file_v1_assistant_assistant_proto_rawDescGZIP(), []int{5}
}

func (x *AssistantPostProcessingActionRequest) GetActionId() string {
	if x != nil {
		return x.ActionId
	}
	return ""
}

func (x *AssistantPostProcessingActionRequest) GetAction() AssistantPostProcessingAction {
	if x != nil {
		return x.Action
	}
	return AssistantPostProcessingAction_NOT_SET
}

// Action that can be passed along with any audio data. This message instructs the audio engine to
// perfrom some kind of action after the data is processed.
type AssistantPostProcessingActionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// ID that can be set by the client. This ID will be returned to the client upon a successful flush or reset.
	ActionId string `protobuf:"bytes,1,opt,name=actionId,proto3" json:"actionId,omitempty"`
	// The specific action that is being requested.
	Action AssistantPostProcessingAction `protobuf:"varint,2,opt,name=action,proto3,enum=sensory.api.v1.assistant.AssistantPostProcessingAction" json:"action,omitempty"`
}

func (x *AssistantPostProcessingActionResponse) Reset() {
	*x = AssistantPostProcessingActionResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_assistant_assistant_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AssistantPostProcessingActionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AssistantPostProcessingActionResponse) ProtoMessage() {}

func (x *AssistantPostProcessingActionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_v1_assistant_assistant_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AssistantPostProcessingActionResponse.ProtoReflect.Descriptor instead.
func (*AssistantPostProcessingActionResponse) Descriptor() ([]byte, []int) {
	return file_v1_assistant_assistant_proto_rawDescGZIP(), []int{6}
}

func (x *AssistantPostProcessingActionResponse) GetActionId() string {
	if x != nil {
		return x.ActionId
	}
	return ""
}

func (x *AssistantPostProcessingActionResponse) GetAction() AssistantPostProcessingAction {
	if x != nil {
		return x.Action
	}
	return AssistantPostProcessingAction_NOT_SET
}

var File_v1_assistant_assistant_proto protoreflect.FileDescriptor

var file_v1_assistant_assistant_proto_rawDesc = []byte{
	0x0a, 0x1c, 0x76, 0x31, 0x2f, 0x61, 0x73, 0x73, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x2f, 0x61,
	0x73, 0x73, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x18,
	0x73, 0x65, 0x6e, 0x73, 0x6f, 0x72, 0x79, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x61,
	0x73, 0x73, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x1a, 0x17, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61,
	0x74, 0x65, 0x2f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x22, 0xba, 0x02, 0x0a, 0x17, 0x41, 0x73, 0x73, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x4a, 0x0a,
	0x06, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x30, 0x2e,
	0x73, 0x65, 0x6e, 0x73, 0x6f, 0x72, 0x79, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x61,
	0x73, 0x73, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x2e, 0x41, 0x73, 0x73, 0x69, 0x73, 0x74, 0x61,
	0x6e, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x48,
	0x00, 0x52, 0x06, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x46, 0x0a, 0x07, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x73, 0x65, 0x6e,
	0x73, 0x6f, 0x72, 0x79, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x61, 0x73, 0x73, 0x69,
	0x73, 0x74, 0x61, 0x6e, 0x74, 0x2e, 0x41, 0x73, 0x73, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x48, 0x00, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x12, 0x72, 0x0a, 0x14, 0x70, 0x6f, 0x73, 0x74, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73,
	0x69, 0x6e, 0x67, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x3e, 0x2e, 0x73, 0x65, 0x6e, 0x73, 0x6f, 0x72, 0x79, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31,
	0x2e, 0x61, 0x73, 0x73, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x2e, 0x41, 0x73, 0x73, 0x69, 0x73,
	0x74, 0x61, 0x6e, 0x74, 0x50, 0x6f, 0x73, 0x74, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x69,
	0x6e, 0x67, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52,
	0x14, 0x70, 0x6f, 0x73, 0x74, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x69, 0x6e, 0x67, 0x41,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x17, 0x0a, 0x10, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x69,
	0x6e, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x03, 0xf8, 0x42, 0x01, 0x22, 0x6a,
	0x0a, 0x10, 0x41, 0x73, 0x73, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x12, 0x20, 0x0a, 0x04, 0x74, 0x65, 0x78, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x42, 0x0a, 0xfa, 0x42, 0x07, 0x72, 0x05, 0x10, 0x01, 0x18, 0xff, 0x0f, 0x48, 0x00, 0x52, 0x04,
	0x74, 0x65, 0x78, 0x74, 0x12, 0x24, 0x0a, 0x0c, 0x61, 0x75, 0x64, 0x69, 0x6f, 0x43, 0x6f, 0x6e,
	0x74, 0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x48, 0x00, 0x52, 0x0c, 0x61, 0x75,
	0x64, 0x69, 0x6f, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x42, 0x0e, 0x0a, 0x07, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x03, 0xf8, 0x42, 0x01, 0x22, 0x3c, 0x0a, 0x06, 0x49, 0x6e,
	0x74, 0x65, 0x6e, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x6f, 0x6e, 0x66,
	0x69, 0x64, 0x65, 0x6e, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0a, 0x63, 0x6f,
	0x6e, 0x66, 0x69, 0x64, 0x65, 0x6e, 0x63, 0x65, 0x22, 0xe7, 0x02, 0x0a, 0x18, 0x41, 0x73, 0x73,
	0x69, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x65, 0x78, 0x74, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x65, 0x78, 0x74, 0x12, 0x22, 0x0a, 0x0c, 0x61, 0x75, 0x64,
	0x69, 0x6f, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52,
	0x0c, 0x61, 0x75, 0x64, 0x69, 0x6f, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x38, 0x0a,
	0x06, 0x69, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e,
	0x73, 0x65, 0x6e, 0x73, 0x6f, 0x72, 0x79, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x61,
	0x73, 0x73, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x2e, 0x49, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x52,
	0x06, 0x69, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x3a, 0x0a, 0x07, 0x69, 0x6e, 0x74, 0x65, 0x6e,
	0x74, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x73, 0x65, 0x6e, 0x73, 0x6f,
	0x72, 0x79, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x61, 0x73, 0x73, 0x69, 0x73, 0x74,
	0x61, 0x6e, 0x74, 0x2e, 0x49, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x52, 0x07, 0x69, 0x6e, 0x74, 0x65,
	0x6e, 0x74, 0x73, 0x12, 0x28, 0x0a, 0x0f, 0x69, 0x73, 0x41, 0x75, 0x64, 0x69, 0x6f, 0x43, 0x6f,
	0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0f, 0x69, 0x73,
	0x41, 0x75, 0x64, 0x69, 0x6f, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x12, 0x73, 0x0a,
	0x14, 0x70, 0x6f, 0x73, 0x74, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x69, 0x6e, 0x67, 0x41,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3f, 0x2e, 0x73, 0x65,
	0x6e, 0x73, 0x6f, 0x72, 0x79, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x61, 0x73, 0x73,
	0x69, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x2e, 0x41, 0x73, 0x73, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x74,
	0x50, 0x6f, 0x73, 0x74, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x69, 0x6e, 0x67, 0x41, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x14, 0x70, 0x6f,
	0x73, 0x74, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x69, 0x6e, 0x67, 0x41, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x22, 0xc0, 0x01, 0x0a, 0x16, 0x41, 0x73, 0x73, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x74,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x21, 0x0a,
	0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x09, 0xfa,
	0x42, 0x06, 0x72, 0x04, 0x10, 0x01, 0x18, 0x7f, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64,
	0x12, 0x25, 0x0a, 0x08, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x42, 0x09, 0xfa, 0x42, 0x06, 0x72, 0x04, 0x10, 0x01, 0x18, 0x7f, 0x52, 0x08, 0x64,
	0x65, 0x76, 0x69, 0x63, 0x65, 0x49, 0x64, 0x12, 0x28, 0x0a, 0x09, 0x6d, 0x6f, 0x64, 0x65, 0x6c,
	0x4e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0a, 0xfa, 0x42, 0x07, 0x72,
	0x05, 0x10, 0x01, 0x18, 0xff, 0x01, 0x52, 0x09, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x4e, 0x61, 0x6d,
	0x65, 0x12, 0x32, 0x0a, 0x14, 0x69, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x41, 0x75, 0x64, 0x69,
	0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x14, 0x69, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x41, 0x75, 0x64, 0x69, 0x6f, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x9d, 0x01, 0x0a, 0x24, 0x41, 0x73, 0x73, 0x69, 0x73, 0x74,
	0x61, 0x6e, 0x74, 0x50, 0x6f, 0x73, 0x74, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x69, 0x6e,
	0x67, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a,
	0x0a, 0x08, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x59, 0x0a, 0x06, 0x61, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x37, 0x2e, 0x73, 0x65, 0x6e,
	0x73, 0x6f, 0x72, 0x79, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x61, 0x73, 0x73, 0x69,
	0x73, 0x74, 0x61, 0x6e, 0x74, 0x2e, 0x41, 0x73, 0x73, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x50,
	0x6f, 0x73, 0x74, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x69, 0x6e, 0x67, 0x41, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x42, 0x08, 0xfa, 0x42, 0x05, 0x82, 0x01, 0x02, 0x10, 0x01, 0x52, 0x06, 0x61,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x9e, 0x01, 0x0a, 0x25, 0x41, 0x73, 0x73, 0x69, 0x73, 0x74,
	0x61, 0x6e, 0x74, 0x50, 0x6f, 0x73, 0x74, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x69, 0x6e,
	0x67, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x1a, 0x0a, 0x08, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x59, 0x0a, 0x06, 0x61,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x37, 0x2e, 0x73, 0x65,
	0x6e, 0x73, 0x6f, 0x72, 0x79, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x61, 0x73, 0x73,
	0x69, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x2e, 0x41, 0x73, 0x73, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x74,
	0x50, 0x6f, 0x73, 0x74, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x69, 0x6e, 0x67, 0x41, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x42, 0x08, 0xfa, 0x42, 0x05, 0x82, 0x01, 0x02, 0x10, 0x01, 0x52, 0x06,
	0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2a, 0x37, 0x0a, 0x1d, 0x41, 0x73, 0x73, 0x69, 0x73, 0x74,
	0x61, 0x6e, 0x74, 0x50, 0x6f, 0x73, 0x74, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x69, 0x6e,
	0x67, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x0b, 0x0a, 0x07, 0x4e, 0x4f, 0x54, 0x5f, 0x53,
	0x45, 0x54, 0x10, 0x00, 0x12, 0x09, 0x0a, 0x05, 0x46, 0x49, 0x4e, 0x41, 0x4c, 0x10, 0x01, 0x32,
	0x91, 0x01, 0x0a, 0x10, 0x41, 0x73, 0x73, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x12, 0x7d, 0x0a, 0x0e, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x31, 0x2e, 0x73, 0x65, 0x6e, 0x73, 0x6f, 0x72, 0x79,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x61, 0x73, 0x73, 0x69, 0x73, 0x74, 0x61, 0x6e,
	0x74, 0x2e, 0x41, 0x73, 0x73, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x32, 0x2e, 0x73, 0x65, 0x6e, 0x73,
	0x6f, 0x72, 0x79, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x61, 0x73, 0x73, 0x69, 0x73,
	0x74, 0x61, 0x6e, 0x74, 0x2e, 0x41, 0x73, 0x73, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x28,
	0x01, 0x30, 0x01, 0x42, 0x80, 0x01, 0x0a, 0x20, 0x61, 0x69, 0x2e, 0x73, 0x65, 0x6e, 0x73, 0x6f,
	0x72, 0x79, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x61,
	0x73, 0x73, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x42, 0x1a, 0x53, 0x65, 0x6e, 0x73, 0x6f, 0x72,
	0x79, 0x41, 0x70, 0x69, 0x56, 0x31, 0x41, 0x73, 0x73, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x50,
	0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x3e, 0x67, 0x69, 0x74, 0x6c, 0x61, 0x62, 0x2e, 0x63,
	0x6f, 0x6d, 0x2f, 0x73, 0x65, 0x6e, 0x73, 0x6f, 0x72, 0x79, 0x2d, 0x63, 0x6c, 0x6f, 0x75, 0x64,
	0x2f, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2f, 0x74, 0x69, 0x74, 0x61, 0x6e, 0x2e, 0x67, 0x69,
	0x74, 0x2f, 0x70, 0x6b, 0x67, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x61, 0x73, 0x73,
	0x69, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_v1_assistant_assistant_proto_rawDescOnce sync.Once
	file_v1_assistant_assistant_proto_rawDescData = file_v1_assistant_assistant_proto_rawDesc
)

func file_v1_assistant_assistant_proto_rawDescGZIP() []byte {
	file_v1_assistant_assistant_proto_rawDescOnce.Do(func() {
		file_v1_assistant_assistant_proto_rawDescData = protoimpl.X.CompressGZIP(file_v1_assistant_assistant_proto_rawDescData)
	})
	return file_v1_assistant_assistant_proto_rawDescData
}

var file_v1_assistant_assistant_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_v1_assistant_assistant_proto_msgTypes = make([]protoimpl.MessageInfo, 7)
var file_v1_assistant_assistant_proto_goTypes = []interface{}{
	(AssistantPostProcessingAction)(0),            // 0: sensory.api.v1.assistant.AssistantPostProcessingAction
	(*AssistantMessageRequest)(nil),               // 1: sensory.api.v1.assistant.AssistantMessageRequest
	(*AssistantMessage)(nil),                      // 2: sensory.api.v1.assistant.AssistantMessage
	(*Intent)(nil),                                // 3: sensory.api.v1.assistant.Intent
	(*AssistantMessageResponse)(nil),              // 4: sensory.api.v1.assistant.AssistantMessageResponse
	(*AssistantMessageConfig)(nil),                // 5: sensory.api.v1.assistant.AssistantMessageConfig
	(*AssistantPostProcessingActionRequest)(nil),  // 6: sensory.api.v1.assistant.AssistantPostProcessingActionRequest
	(*AssistantPostProcessingActionResponse)(nil), // 7: sensory.api.v1.assistant.AssistantPostProcessingActionResponse
}
var file_v1_assistant_assistant_proto_depIdxs = []int32{
	5, // 0: sensory.api.v1.assistant.AssistantMessageRequest.config:type_name -> sensory.api.v1.assistant.AssistantMessageConfig
	2, // 1: sensory.api.v1.assistant.AssistantMessageRequest.message:type_name -> sensory.api.v1.assistant.AssistantMessage
	6, // 2: sensory.api.v1.assistant.AssistantMessageRequest.postProcessingAction:type_name -> sensory.api.v1.assistant.AssistantPostProcessingActionRequest
	3, // 3: sensory.api.v1.assistant.AssistantMessageResponse.intent:type_name -> sensory.api.v1.assistant.Intent
	3, // 4: sensory.api.v1.assistant.AssistantMessageResponse.intents:type_name -> sensory.api.v1.assistant.Intent
	7, // 5: sensory.api.v1.assistant.AssistantMessageResponse.postProcessingAction:type_name -> sensory.api.v1.assistant.AssistantPostProcessingActionResponse
	0, // 6: sensory.api.v1.assistant.AssistantPostProcessingActionRequest.action:type_name -> sensory.api.v1.assistant.AssistantPostProcessingAction
	0, // 7: sensory.api.v1.assistant.AssistantPostProcessingActionResponse.action:type_name -> sensory.api.v1.assistant.AssistantPostProcessingAction
	1, // 8: sensory.api.v1.assistant.AssistantService.ProcessMessage:input_type -> sensory.api.v1.assistant.AssistantMessageRequest
	4, // 9: sensory.api.v1.assistant.AssistantService.ProcessMessage:output_type -> sensory.api.v1.assistant.AssistantMessageResponse
	9, // [9:10] is the sub-list for method output_type
	8, // [8:9] is the sub-list for method input_type
	8, // [8:8] is the sub-list for extension type_name
	8, // [8:8] is the sub-list for extension extendee
	0, // [0:8] is the sub-list for field type_name
}

func init() { file_v1_assistant_assistant_proto_init() }
func file_v1_assistant_assistant_proto_init() {
	if File_v1_assistant_assistant_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_v1_assistant_assistant_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AssistantMessageRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_assistant_assistant_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AssistantMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_assistant_assistant_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Intent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_assistant_assistant_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AssistantMessageResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_assistant_assistant_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AssistantMessageConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_assistant_assistant_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AssistantPostProcessingActionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_assistant_assistant_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AssistantPostProcessingActionResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_v1_assistant_assistant_proto_msgTypes[0].OneofWrappers = []interface{}{
		(*AssistantMessageRequest_Config)(nil),
		(*AssistantMessageRequest_Message)(nil),
	}
	file_v1_assistant_assistant_proto_msgTypes[1].OneofWrappers = []interface{}{
		(*AssistantMessage_Text)(nil),
		(*AssistantMessage_AudioContent)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_v1_assistant_assistant_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   7,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_v1_assistant_assistant_proto_goTypes,
		DependencyIndexes: file_v1_assistant_assistant_proto_depIdxs,
		EnumInfos:         file_v1_assistant_assistant_proto_enumTypes,
		MessageInfos:      file_v1_assistant_assistant_proto_msgTypes,
	}.Build()
	File_v1_assistant_assistant_proto = out.File
	file_v1_assistant_assistant_proto_rawDesc = nil
	file_v1_assistant_assistant_proto_goTypes = nil
	file_v1_assistant_assistant_proto_depIdxs = nil
}

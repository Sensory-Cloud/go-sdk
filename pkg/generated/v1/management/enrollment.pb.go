// sensory.api.management

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.0
// 	protoc        v3.19.4
// source: v1/management/enrollment.proto

package management

import (
	_ "github.com/envoyproxy/protoc-gen-validate/validate"
	common "github.com/Sensory-Cloud/go-sdk/pkg/generated/common"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Criteria to filter the returned enrollments
// A client may only retrieve enrollments
type GetEnrollmentsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId string `protobuf:"bytes,1,opt,name=userId,proto3" json:"userId,omitempty"` // The id or userId of the user
}

func (x *GetEnrollmentsRequest) Reset() {
	*x = GetEnrollmentsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_management_enrollment_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetEnrollmentsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetEnrollmentsRequest) ProtoMessage() {}

func (x *GetEnrollmentsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_v1_management_enrollment_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetEnrollmentsRequest.ProtoReflect.Descriptor instead.
func (*GetEnrollmentsRequest) Descriptor() ([]byte, []int) {
	return file_v1_management_enrollment_proto_rawDescGZIP(), []int{0}
}

func (x *GetEnrollmentsRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

// A response containing a list of enrollments
type GetEnrollmentsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// A list of enrollments
	Enrollments []*EnrollmentResponse `protobuf:"bytes,1,rep,name=enrollments,proto3" json:"enrollments,omitempty"`
	// An indication of if the requesting oauth agent is trusted for these enrollments.
	// If the device is not trusted, identifying information will be removed from the enrollment response.
	IsRequestorTrusted bool `protobuf:"varint,2,opt,name=isRequestorTrusted,proto3" json:"isRequestorTrusted,omitempty"`
}

func (x *GetEnrollmentsResponse) Reset() {
	*x = GetEnrollmentsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_management_enrollment_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetEnrollmentsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetEnrollmentsResponse) ProtoMessage() {}

func (x *GetEnrollmentsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_v1_management_enrollment_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetEnrollmentsResponse.ProtoReflect.Descriptor instead.
func (*GetEnrollmentsResponse) Descriptor() ([]byte, []int) {
	return file_v1_management_enrollment_proto_rawDescGZIP(), []int{1}
}

func (x *GetEnrollmentsResponse) GetEnrollments() []*EnrollmentResponse {
	if x != nil {
		return x.Enrollments
	}
	return nil
}

func (x *GetEnrollmentsResponse) GetIsRequestorTrusted() bool {
	if x != nil {
		return x.IsRequestorTrusted
	}
	return false
}

// A response containing a single enrollment
type EnrollmentResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Unique enrollment idenfier (UUID)
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Created at epoch
	CreatedAt *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=createdAt,proto3" json:"createdAt,omitempty"`
	// Updated at epoch
	UpdatedAt *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=updatedAt,proto3" json:"updatedAt,omitempty"`
	// User-entered Description
	Description string `protobuf:"bytes,4,opt,name=description,proto3" json:"description,omitempty"`
	// Name of the model belonging to the enrollment
	ModelName string `protobuf:"bytes,5,opt,name=modelName,proto3" json:"modelName,omitempty"`
	// Type of the model enrolled
	ModelType common.ModelType `protobuf:"varint,6,opt,name=modelType,proto3,enum=sensory.api.common.ModelType" json:"modelType,omitempty"`
	// Version of the model enrolled
	ModelVersion string `protobuf:"bytes,7,opt,name=modelVersion,proto3" json:"modelVersion,omitempty"`
	// Id of the device that enrolled this model
	DeviceId string `protobuf:"bytes,8,opt,name=deviceId,proto3" json:"deviceId,omitempty"`
	// Id of the user that enrolled this model
	UserId string `protobuf:"bytes,9,opt,name=userId,proto3" json:"userId,omitempty"`
	// The type of data compression that was used during enrollment creation
	Compression *common.CompressionConfiguration `protobuf:"bytes,10,opt,name=compression,proto3" json:"compression,omitempty"`
	// Name of the device that enrolled this model
	DeviceName string `protobuf:"bytes,11,opt,name=deviceName,proto3" json:"deviceName,omitempty"`
	// Indicates if liveness was evaluated during the enrollment
	DidEnrollWithLiveness bool `protobuf:"varint,12,opt,name=didEnrollWithLiveness,proto3" json:"didEnrollWithLiveness,omitempty"`
	// Client-assigned referenceId for external use
	ReferenceId string `protobuf:"bytes,13,opt,name=referenceId,proto3" json:"referenceId,omitempty"`
	// Indicates if the enrollmed is suited for biometrics. If this value is false, the enrollment cannot be used for authentication.
	DidEnrollAsBiometric bool `protobuf:"varint,14,opt,name=didEnrollAsBiometric,proto3" json:"didEnrollAsBiometric,omitempty"`
}

func (x *EnrollmentResponse) Reset() {
	*x = EnrollmentResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_management_enrollment_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EnrollmentResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EnrollmentResponse) ProtoMessage() {}

func (x *EnrollmentResponse) ProtoReflect() protoreflect.Message {
	mi := &file_v1_management_enrollment_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EnrollmentResponse.ProtoReflect.Descriptor instead.
func (*EnrollmentResponse) Descriptor() ([]byte, []int) {
	return file_v1_management_enrollment_proto_rawDescGZIP(), []int{2}
}

func (x *EnrollmentResponse) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *EnrollmentResponse) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *EnrollmentResponse) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

func (x *EnrollmentResponse) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *EnrollmentResponse) GetModelName() string {
	if x != nil {
		return x.ModelName
	}
	return ""
}

func (x *EnrollmentResponse) GetModelType() common.ModelType {
	if x != nil {
		return x.ModelType
	}
	return common.ModelType(0)
}

func (x *EnrollmentResponse) GetModelVersion() string {
	if x != nil {
		return x.ModelVersion
	}
	return ""
}

func (x *EnrollmentResponse) GetDeviceId() string {
	if x != nil {
		return x.DeviceId
	}
	return ""
}

func (x *EnrollmentResponse) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *EnrollmentResponse) GetCompression() *common.CompressionConfiguration {
	if x != nil {
		return x.Compression
	}
	return nil
}

func (x *EnrollmentResponse) GetDeviceName() string {
	if x != nil {
		return x.DeviceName
	}
	return ""
}

func (x *EnrollmentResponse) GetDidEnrollWithLiveness() bool {
	if x != nil {
		return x.DidEnrollWithLiveness
	}
	return false
}

func (x *EnrollmentResponse) GetReferenceId() string {
	if x != nil {
		return x.ReferenceId
	}
	return ""
}

func (x *EnrollmentResponse) GetDidEnrollAsBiometric() bool {
	if x != nil {
		return x.DidEnrollAsBiometric
	}
	return false
}

// A response containing a list of enrollment groups
type GetEnrollmentGroupsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// A list of enrollment groups
	EnrollmentGroups []*EnrollmentGroupResponse `protobuf:"bytes,1,rep,name=enrollmentGroups,proto3" json:"enrollmentGroups,omitempty"`
}

func (x *GetEnrollmentGroupsResponse) Reset() {
	*x = GetEnrollmentGroupsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_management_enrollment_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetEnrollmentGroupsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetEnrollmentGroupsResponse) ProtoMessage() {}

func (x *GetEnrollmentGroupsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_v1_management_enrollment_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetEnrollmentGroupsResponse.ProtoReflect.Descriptor instead.
func (*GetEnrollmentGroupsResponse) Descriptor() ([]byte, []int) {
	return file_v1_management_enrollment_proto_rawDescGZIP(), []int{3}
}

func (x *GetEnrollmentGroupsResponse) GetEnrollmentGroups() []*EnrollmentGroupResponse {
	if x != nil {
		return x.EnrollmentGroups
	}
	return nil
}

// A group of enrollments that can be authenticated together
type EnrollmentGroupResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Unique group identifier (UUID)
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Created at epoch
	CreatedAt *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=createdAt,proto3" json:"createdAt,omitempty"`
	// Updated at epoch
	UpdatedAt *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=updatedAt,proto3" json:"updatedAt,omitempty"`
	// Name of the enrollment group
	Name string `protobuf:"bytes,4,opt,name=name,proto3" json:"name,omitempty"`
	// Description of the enrollment group
	Description string `protobuf:"bytes,5,opt,name=description,proto3" json:"description,omitempty"`
	// Name of the model for this enrollment group
	ModelName string `protobuf:"bytes,6,opt,name=modelName,proto3" json:"modelName,omitempty"`
	// Type of the model for this enrollment gooup
	ModelType common.ModelType `protobuf:"varint,7,opt,name=modelType,proto3,enum=sensory.api.common.ModelType" json:"modelType,omitempty"`
	// Version of the model
	ModelVersion string `protobuf:"bytes,8,opt,name=modelVersion,proto3" json:"modelVersion,omitempty"`
	// UserID of the user who created the enrollment group
	UserId string `protobuf:"bytes,9,opt,name=userId,proto3" json:"userId,omitempty"`
	// List of enrollments contained in this enrollment group
	Enrollments []*EnrollmentResponse `protobuf:"bytes,10,rep,name=enrollments,proto3" json:"enrollments,omitempty"`
}

func (x *EnrollmentGroupResponse) Reset() {
	*x = EnrollmentGroupResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_management_enrollment_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EnrollmentGroupResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EnrollmentGroupResponse) ProtoMessage() {}

func (x *EnrollmentGroupResponse) ProtoReflect() protoreflect.Message {
	mi := &file_v1_management_enrollment_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EnrollmentGroupResponse.ProtoReflect.Descriptor instead.
func (*EnrollmentGroupResponse) Descriptor() ([]byte, []int) {
	return file_v1_management_enrollment_proto_rawDescGZIP(), []int{4}
}

func (x *EnrollmentGroupResponse) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *EnrollmentGroupResponse) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *EnrollmentGroupResponse) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

func (x *EnrollmentGroupResponse) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *EnrollmentGroupResponse) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *EnrollmentGroupResponse) GetModelName() string {
	if x != nil {
		return x.ModelName
	}
	return ""
}

func (x *EnrollmentGroupResponse) GetModelType() common.ModelType {
	if x != nil {
		return x.ModelType
	}
	return common.ModelType(0)
}

func (x *EnrollmentGroupResponse) GetModelVersion() string {
	if x != nil {
		return x.ModelVersion
	}
	return ""
}

func (x *EnrollmentGroupResponse) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *EnrollmentGroupResponse) GetEnrollments() []*EnrollmentResponse {
	if x != nil {
		return x.Enrollments
	}
	return nil
}

// Request to create a new enrollment group
type CreateEnrollmentGroupRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Identifier for enrollment group
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Name of the enrollment group
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	// Description for the enrollment group
	Description string `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	// Model name for the model used by this enrollment group
	ModelName string `protobuf:"bytes,4,opt,name=modelName,proto3" json:"modelName,omitempty"`
	// User ID of the user that owns the enrollment group
	UserId string `protobuf:"bytes,5,opt,name=userId,proto3" json:"userId,omitempty"`
	// List of enrollment IDs to include in the enrollment group
	EnrollmentIds []string `protobuf:"bytes,6,rep,name=enrollmentIds,proto3" json:"enrollmentIds,omitempty"`
}

func (x *CreateEnrollmentGroupRequest) Reset() {
	*x = CreateEnrollmentGroupRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_management_enrollment_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateEnrollmentGroupRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateEnrollmentGroupRequest) ProtoMessage() {}

func (x *CreateEnrollmentGroupRequest) ProtoReflect() protoreflect.Message {
	mi := &file_v1_management_enrollment_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateEnrollmentGroupRequest.ProtoReflect.Descriptor instead.
func (*CreateEnrollmentGroupRequest) Descriptor() ([]byte, []int) {
	return file_v1_management_enrollment_proto_rawDescGZIP(), []int{5}
}

func (x *CreateEnrollmentGroupRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *CreateEnrollmentGroupRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CreateEnrollmentGroupRequest) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *CreateEnrollmentGroupRequest) GetModelName() string {
	if x != nil {
		return x.ModelName
	}
	return ""
}

func (x *CreateEnrollmentGroupRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *CreateEnrollmentGroupRequest) GetEnrollmentIds() []string {
	if x != nil {
		return x.EnrollmentIds
	}
	return nil
}

// Request to append additional enrollments to an enrollment group
type AppendEnrollmentGroupRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Enrollment group ID to append enrollments to
	GroupId string `protobuf:"bytes,1,opt,name=groupId,proto3" json:"groupId,omitempty"`
	// List of enrollment IDS to append
	EnrollmentIds []string `protobuf:"bytes,2,rep,name=enrollmentIds,proto3" json:"enrollmentIds,omitempty"`
}

func (x *AppendEnrollmentGroupRequest) Reset() {
	*x = AppendEnrollmentGroupRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_management_enrollment_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AppendEnrollmentGroupRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AppendEnrollmentGroupRequest) ProtoMessage() {}

func (x *AppendEnrollmentGroupRequest) ProtoReflect() protoreflect.Message {
	mi := &file_v1_management_enrollment_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AppendEnrollmentGroupRequest.ProtoReflect.Descriptor instead.
func (*AppendEnrollmentGroupRequest) Descriptor() ([]byte, []int) {
	return file_v1_management_enrollment_proto_rawDescGZIP(), []int{6}
}

func (x *AppendEnrollmentGroupRequest) GetGroupId() string {
	if x != nil {
		return x.GroupId
	}
	return ""
}

func (x *AppendEnrollmentGroupRequest) GetEnrollmentIds() []string {
	if x != nil {
		return x.EnrollmentIds
	}
	return nil
}

// A request to delete and enrollment by ID
type DeleteEnrollmentRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The enrollment ID
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *DeleteEnrollmentRequest) Reset() {
	*x = DeleteEnrollmentRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_management_enrollment_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteEnrollmentRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteEnrollmentRequest) ProtoMessage() {}

func (x *DeleteEnrollmentRequest) ProtoReflect() protoreflect.Message {
	mi := &file_v1_management_enrollment_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteEnrollmentRequest.ProtoReflect.Descriptor instead.
func (*DeleteEnrollmentRequest) Descriptor() ([]byte, []int) {
	return file_v1_management_enrollment_proto_rawDescGZIP(), []int{7}
}

func (x *DeleteEnrollmentRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

// A request to delete an enrollment group
type DeleteEnrollmentGroupRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Enrollment Group ID
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *DeleteEnrollmentGroupRequest) Reset() {
	*x = DeleteEnrollmentGroupRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_management_enrollment_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteEnrollmentGroupRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteEnrollmentGroupRequest) ProtoMessage() {}

func (x *DeleteEnrollmentGroupRequest) ProtoReflect() protoreflect.Message {
	mi := &file_v1_management_enrollment_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteEnrollmentGroupRequest.ProtoReflect.Descriptor instead.
func (*DeleteEnrollmentGroupRequest) Descriptor() ([]byte, []int) {
	return file_v1_management_enrollment_proto_rawDescGZIP(), []int{8}
}

func (x *DeleteEnrollmentGroupRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

// A request to update the description of an enrollment
type UpdateEnrollmentRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The enrollment ID
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// New description of the enrollment
	Description string `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
}

func (x *UpdateEnrollmentRequest) Reset() {
	*x = UpdateEnrollmentRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_management_enrollment_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateEnrollmentRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateEnrollmentRequest) ProtoMessage() {}

func (x *UpdateEnrollmentRequest) ProtoReflect() protoreflect.Message {
	mi := &file_v1_management_enrollment_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateEnrollmentRequest.ProtoReflect.Descriptor instead.
func (*UpdateEnrollmentRequest) Descriptor() ([]byte, []int) {
	return file_v1_management_enrollment_proto_rawDescGZIP(), []int{9}
}

func (x *UpdateEnrollmentRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *UpdateEnrollmentRequest) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

// A request to update the name of an enrollment group
type UpdateEnrollmentGroupRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Enrollment Group ID
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// New name of the enrollment group
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *UpdateEnrollmentGroupRequest) Reset() {
	*x = UpdateEnrollmentGroupRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_management_enrollment_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateEnrollmentGroupRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateEnrollmentGroupRequest) ProtoMessage() {}

func (x *UpdateEnrollmentGroupRequest) ProtoReflect() protoreflect.Message {
	mi := &file_v1_management_enrollment_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateEnrollmentGroupRequest.ProtoReflect.Descriptor instead.
func (*UpdateEnrollmentGroupRequest) Descriptor() ([]byte, []int) {
	return file_v1_management_enrollment_proto_rawDescGZIP(), []int{10}
}

func (x *UpdateEnrollmentGroupRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *UpdateEnrollmentGroupRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

// Request to remove enrollments from an enrollment group
type RemoveEnrollmentsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Enrollment group ID to append enrollments to
	GroupId string `protobuf:"bytes,1,opt,name=groupId,proto3" json:"groupId,omitempty"`
	// List of enrollment IDS to append
	EnrollmentIds []string `protobuf:"bytes,2,rep,name=enrollmentIds,proto3" json:"enrollmentIds,omitempty"`
}

func (x *RemoveEnrollmentsRequest) Reset() {
	*x = RemoveEnrollmentsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_management_enrollment_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemoveEnrollmentsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveEnrollmentsRequest) ProtoMessage() {}

func (x *RemoveEnrollmentsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_v1_management_enrollment_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveEnrollmentsRequest.ProtoReflect.Descriptor instead.
func (*RemoveEnrollmentsRequest) Descriptor() ([]byte, []int) {
	return file_v1_management_enrollment_proto_rawDescGZIP(), []int{11}
}

func (x *RemoveEnrollmentsRequest) GetGroupId() string {
	if x != nil {
		return x.GroupId
	}
	return ""
}

func (x *RemoveEnrollmentsRequest) GetEnrollmentIds() []string {
	if x != nil {
		return x.EnrollmentIds
	}
	return nil
}

var File_v1_management_enrollment_proto protoreflect.FileDescriptor

var file_v1_management_enrollment_proto_rawDesc = []byte{
	0x0a, 0x1e, 0x76, 0x31, 0x2f, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2f,
	0x65, 0x6e, 0x72, 0x6f, 0x6c, 0x6c, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x12, 0x19, 0x73, 0x65, 0x6e, 0x73, 0x6f, 0x72, 0x79, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31,
	0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x1a, 0x1f, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x17, 0x76, 0x61,
	0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x13, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x63, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x3a, 0x0a, 0x15, 0x47, 0x65,
	0x74, 0x45, 0x6e, 0x72, 0x6f, 0x6c, 0x6c, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x21, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x42, 0x09, 0xfa, 0x42, 0x06, 0x72, 0x04, 0x10, 0x01, 0x18, 0x7f, 0x52, 0x06,
	0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x22, 0x99, 0x01, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x45, 0x6e,
	0x72, 0x6f, 0x6c, 0x6c, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x4f, 0x0a, 0x0b, 0x65, 0x6e, 0x72, 0x6f, 0x6c, 0x6c, 0x6d, 0x65, 0x6e, 0x74, 0x73,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x73, 0x65, 0x6e, 0x73, 0x6f, 0x72, 0x79,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65,
	0x6e, 0x74, 0x2e, 0x45, 0x6e, 0x72, 0x6f, 0x6c, 0x6c, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x0b, 0x65, 0x6e, 0x72, 0x6f, 0x6c, 0x6c, 0x6d, 0x65, 0x6e,
	0x74, 0x73, 0x12, 0x2e, 0x0a, 0x12, 0x69, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x6f,
	0x72, 0x54, 0x72, 0x75, 0x73, 0x74, 0x65, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x12,
	0x69, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x6f, 0x72, 0x54, 0x72, 0x75, 0x73, 0x74,
	0x65, 0x64, 0x22, 0xe9, 0x04, 0x0a, 0x12, 0x45, 0x6e, 0x72, 0x6f, 0x6c, 0x6c, 0x6d, 0x65, 0x6e,
	0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x38, 0x0a, 0x09, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x64, 0x41, 0x74, 0x12, 0x38, 0x0a, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x20, 0x0a,
	0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x1c, 0x0a, 0x09, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x3b, 0x0a,
	0x09, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x54, 0x79, 0x70, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x1d, 0x2e, 0x73, 0x65, 0x6e, 0x73, 0x6f, 0x72, 0x79, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x63,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x54, 0x79, 0x70, 0x65, 0x52,
	0x09, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x54, 0x79, 0x70, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x6d, 0x6f,
	0x64, 0x65, 0x6c, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0c, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x1a,
	0x0a, 0x08, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x49, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73,
	0x65, 0x72, 0x49, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72,
	0x49, 0x64, 0x12, 0x4e, 0x0a, 0x0b, 0x63, 0x6f, 0x6d, 0x70, 0x72, 0x65, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x73, 0x65, 0x6e, 0x73, 0x6f, 0x72,
	0x79, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x43, 0x6f, 0x6d,
	0x70, 0x72, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0b, 0x63, 0x6f, 0x6d, 0x70, 0x72, 0x65, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x12, 0x1e, 0x0a, 0x0a, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x4e, 0x61, 0x6d, 0x65,
	0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x4e, 0x61,
	0x6d, 0x65, 0x12, 0x34, 0x0a, 0x15, 0x64, 0x69, 0x64, 0x45, 0x6e, 0x72, 0x6f, 0x6c, 0x6c, 0x57,
	0x69, 0x74, 0x68, 0x4c, 0x69, 0x76, 0x65, 0x6e, 0x65, 0x73, 0x73, 0x18, 0x0c, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x15, 0x64, 0x69, 0x64, 0x45, 0x6e, 0x72, 0x6f, 0x6c, 0x6c, 0x57, 0x69, 0x74, 0x68,
	0x4c, 0x69, 0x76, 0x65, 0x6e, 0x65, 0x73, 0x73, 0x12, 0x20, 0x0a, 0x0b, 0x72, 0x65, 0x66, 0x65,
	0x72, 0x65, 0x6e, 0x63, 0x65, 0x49, 0x64, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x72,
	0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x49, 0x64, 0x12, 0x32, 0x0a, 0x14, 0x64, 0x69,
	0x64, 0x45, 0x6e, 0x72, 0x6f, 0x6c, 0x6c, 0x41, 0x73, 0x42, 0x69, 0x6f, 0x6d, 0x65, 0x74, 0x72,
	0x69, 0x63, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x08, 0x52, 0x14, 0x64, 0x69, 0x64, 0x45, 0x6e, 0x72,
	0x6f, 0x6c, 0x6c, 0x41, 0x73, 0x42, 0x69, 0x6f, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x22, 0x7d,
	0x0a, 0x1b, 0x47, 0x65, 0x74, 0x45, 0x6e, 0x72, 0x6f, 0x6c, 0x6c, 0x6d, 0x65, 0x6e, 0x74, 0x47,
	0x72, 0x6f, 0x75, 0x70, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x5e, 0x0a,
	0x10, 0x65, 0x6e, 0x72, 0x6f, 0x6c, 0x6c, 0x6d, 0x65, 0x6e, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70,
	0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x32, 0x2e, 0x73, 0x65, 0x6e, 0x73, 0x6f, 0x72,
	0x79, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d,
	0x65, 0x6e, 0x74, 0x2e, 0x45, 0x6e, 0x72, 0x6f, 0x6c, 0x6c, 0x6d, 0x65, 0x6e, 0x74, 0x47, 0x72,
	0x6f, 0x75, 0x70, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x10, 0x65, 0x6e, 0x72,
	0x6f, 0x6c, 0x6c, 0x6d, 0x65, 0x6e, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x22, 0xbb, 0x03,
	0x0a, 0x17, 0x45, 0x6e, 0x72, 0x6f, 0x6c, 0x6c, 0x6d, 0x65, 0x6e, 0x74, 0x47, 0x72, 0x6f, 0x75,
	0x70, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x38, 0x0a, 0x09, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x64, 0x41, 0x74, 0x12, 0x38, 0x0a, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x12, 0x0a,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x1c, 0x0a, 0x09, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x4e, 0x61, 0x6d, 0x65,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x4e, 0x61, 0x6d,
	0x65, 0x12, 0x3b, 0x0a, 0x09, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x54, 0x79, 0x70, 0x65, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x1d, 0x2e, 0x73, 0x65, 0x6e, 0x73, 0x6f, 0x72, 0x79, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x54,
	0x79, 0x70, 0x65, 0x52, 0x09, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x54, 0x79, 0x70, 0x65, 0x12, 0x22,
	0x0a, 0x0c, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x56, 0x65, 0x72, 0x73, 0x69,
	0x6f, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x09, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x4f, 0x0a, 0x0b, 0x65, 0x6e,
	0x72, 0x6f, 0x6c, 0x6c, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x2d, 0x2e, 0x73, 0x65, 0x6e, 0x73, 0x6f, 0x72, 0x79, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31,
	0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x45, 0x6e, 0x72, 0x6f,
	0x6c, 0x6c, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x0b,
	0x65, 0x6e, 0x72, 0x6f, 0x6c, 0x6c, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x22, 0xf8, 0x01, 0x0a, 0x1c,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x45, 0x6e, 0x72, 0x6f, 0x6c, 0x6c, 0x6d, 0x65, 0x6e, 0x74,
	0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x19, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x09, 0xfa, 0x42, 0x06, 0x72, 0x04, 0x10,
	0x01, 0x18, 0x7f, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1e, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0a, 0xfa, 0x42, 0x07, 0x72, 0x05, 0x10, 0x01, 0x18, 0xff,
	0x01, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x2a, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x08, 0xfa, 0x42,
	0x05, 0x72, 0x03, 0x18, 0xff, 0x07, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x28, 0x0a, 0x09, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x4e, 0x61, 0x6d, 0x65,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0a, 0xfa, 0x42, 0x07, 0x72, 0x05, 0x10, 0x01, 0x18,
	0xff, 0x01, 0x52, 0x09, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x21, 0x0a,
	0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x42, 0x09, 0xfa,
	0x42, 0x06, 0x72, 0x04, 0x10, 0x01, 0x18, 0x7f, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64,
	0x12, 0x24, 0x0a, 0x0d, 0x65, 0x6e, 0x72, 0x6f, 0x6c, 0x6c, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x64,
	0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0d, 0x65, 0x6e, 0x72, 0x6f, 0x6c, 0x6c, 0x6d,
	0x65, 0x6e, 0x74, 0x49, 0x64, 0x73, 0x22, 0x69, 0x0a, 0x1c, 0x41, 0x70, 0x70, 0x65, 0x6e, 0x64,
	0x45, 0x6e, 0x72, 0x6f, 0x6c, 0x6c, 0x6d, 0x65, 0x6e, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x23, 0x0a, 0x07, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x49,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x09, 0xfa, 0x42, 0x06, 0x72, 0x04, 0x10, 0x01,
	0x18, 0x7f, 0x52, 0x07, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x12, 0x24, 0x0a, 0x0d, 0x65,
	0x6e, 0x72, 0x6f, 0x6c, 0x6c, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x73, 0x18, 0x02, 0x20, 0x03,
	0x28, 0x09, 0x52, 0x0d, 0x65, 0x6e, 0x72, 0x6f, 0x6c, 0x6c, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x64,
	0x73, 0x22, 0x33, 0x0a, 0x17, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x45, 0x6e, 0x72, 0x6f, 0x6c,
	0x6c, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x08, 0xfa, 0x42, 0x05, 0x72, 0x03, 0xb0,
	0x01, 0x01, 0x52, 0x02, 0x69, 0x64, 0x22, 0x39, 0x0a, 0x1c, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x45, 0x6e, 0x72, 0x6f, 0x6c, 0x6c, 0x6d, 0x65, 0x6e, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x19, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x42, 0x09, 0xfa, 0x42, 0x06, 0x72, 0x04, 0x10, 0x01, 0x18, 0x7f, 0x52, 0x02, 0x69,
	0x64, 0x22, 0x5f, 0x0a, 0x17, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x45, 0x6e, 0x72, 0x6f, 0x6c,
	0x6c, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x08, 0xfa, 0x42, 0x05, 0x72, 0x03, 0xb0,
	0x01, 0x01, 0x52, 0x02, 0x69, 0x64, 0x12, 0x2a, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x08, 0xfa, 0x42, 0x05,
	0x72, 0x03, 0x18, 0xff, 0x07, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x22, 0x58, 0x0a, 0x1c, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x45, 0x6e, 0x72, 0x6f,
	0x6c, 0x6c, 0x6d, 0x65, 0x6e, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x19, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x09,
	0xfa, 0x42, 0x06, 0x72, 0x04, 0x10, 0x01, 0x18, 0x7f, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1d, 0x0a,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x09, 0xfa, 0x42, 0x06,
	0x72, 0x04, 0x10, 0x01, 0x18, 0x7f, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x6f, 0x0a, 0x18,
	0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x45, 0x6e, 0x72, 0x6f, 0x6c, 0x6c, 0x6d, 0x65, 0x6e, 0x74,
	0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x23, 0x0a, 0x07, 0x67, 0x72, 0x6f, 0x75,
	0x70, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x09, 0xfa, 0x42, 0x06, 0x72, 0x04,
	0x10, 0x01, 0x18, 0x7f, 0x52, 0x07, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x12, 0x2e, 0x0a,
	0x0d, 0x65, 0x6e, 0x72, 0x6f, 0x6c, 0x6c, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x73, 0x18, 0x02,
	0x20, 0x03, 0x28, 0x09, 0x42, 0x08, 0xfa, 0x42, 0x05, 0x92, 0x01, 0x02, 0x08, 0x01, 0x52, 0x0d,
	0x65, 0x6e, 0x72, 0x6f, 0x6c, 0x6c, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x73, 0x32, 0xb0, 0x09,
	0x0a, 0x11, 0x45, 0x6e, 0x72, 0x6f, 0x6c, 0x6c, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x12, 0x77, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x45, 0x6e, 0x72, 0x6f, 0x6c, 0x6c,
	0x6d, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x30, 0x2e, 0x73, 0x65, 0x6e, 0x73, 0x6f, 0x72, 0x79, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e,
	0x74, 0x2e, 0x47, 0x65, 0x74, 0x45, 0x6e, 0x72, 0x6f, 0x6c, 0x6c, 0x6d, 0x65, 0x6e, 0x74, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x31, 0x2e, 0x73, 0x65, 0x6e, 0x73, 0x6f, 0x72,
	0x79, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d,
	0x65, 0x6e, 0x74, 0x2e, 0x47, 0x65, 0x74, 0x45, 0x6e, 0x72, 0x6f, 0x6c, 0x6c, 0x6d, 0x65, 0x6e,
	0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x81, 0x01, 0x0a,
	0x13, 0x47, 0x65, 0x74, 0x45, 0x6e, 0x72, 0x6f, 0x6c, 0x6c, 0x6d, 0x65, 0x6e, 0x74, 0x47, 0x72,
	0x6f, 0x75, 0x70, 0x73, 0x12, 0x30, 0x2e, 0x73, 0x65, 0x6e, 0x73, 0x6f, 0x72, 0x79, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74,
	0x2e, 0x47, 0x65, 0x74, 0x45, 0x6e, 0x72, 0x6f, 0x6c, 0x6c, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x36, 0x2e, 0x73, 0x65, 0x6e, 0x73, 0x6f, 0x72, 0x79,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65,
	0x6e, 0x74, 0x2e, 0x47, 0x65, 0x74, 0x45, 0x6e, 0x72, 0x6f, 0x6c, 0x6c, 0x6d, 0x65, 0x6e, 0x74,
	0x47, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00,
	0x12, 0x86, 0x01, 0x0a, 0x15, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x45, 0x6e, 0x72, 0x6f, 0x6c,
	0x6c, 0x6d, 0x65, 0x6e, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x37, 0x2e, 0x73, 0x65, 0x6e,
	0x73, 0x6f, 0x72, 0x79, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x6d, 0x61, 0x6e, 0x61,
	0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x45, 0x6e, 0x72,
	0x6f, 0x6c, 0x6c, 0x6d, 0x65, 0x6e, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x32, 0x2e, 0x73, 0x65, 0x6e, 0x73, 0x6f, 0x72, 0x79, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x76, 0x31, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e,
	0x45, 0x6e, 0x72, 0x6f, 0x6c, 0x6c, 0x6d, 0x65, 0x6e, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x86, 0x01, 0x0a, 0x15, 0x41, 0x70,
	0x70, 0x65, 0x6e, 0x64, 0x45, 0x6e, 0x72, 0x6f, 0x6c, 0x6c, 0x6d, 0x65, 0x6e, 0x74, 0x47, 0x72,
	0x6f, 0x75, 0x70, 0x12, 0x37, 0x2e, 0x73, 0x65, 0x6e, 0x73, 0x6f, 0x72, 0x79, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x76, 0x31, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e,
	0x41, 0x70, 0x70, 0x65, 0x6e, 0x64, 0x45, 0x6e, 0x72, 0x6f, 0x6c, 0x6c, 0x6d, 0x65, 0x6e, 0x74,
	0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x32, 0x2e, 0x73,
	0x65, 0x6e, 0x73, 0x6f, 0x72, 0x79, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x6d, 0x61,
	0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x45, 0x6e, 0x72, 0x6f, 0x6c, 0x6c, 0x6d,
	0x65, 0x6e, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x00, 0x12, 0x77, 0x0a, 0x10, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x45, 0x6e, 0x72, 0x6f,
	0x6c, 0x6c, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x32, 0x2e, 0x73, 0x65, 0x6e, 0x73, 0x6f, 0x72, 0x79,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65,
	0x6e, 0x74, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x45, 0x6e, 0x72, 0x6f, 0x6c, 0x6c, 0x6d,
	0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2d, 0x2e, 0x73, 0x65, 0x6e,
	0x73, 0x6f, 0x72, 0x79, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x6d, 0x61, 0x6e, 0x61,
	0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x45, 0x6e, 0x72, 0x6f, 0x6c, 0x6c, 0x6d, 0x65, 0x6e,
	0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x86, 0x01, 0x0a, 0x15,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x45, 0x6e, 0x72, 0x6f, 0x6c, 0x6c, 0x6d, 0x65, 0x6e, 0x74,
	0x47, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x37, 0x2e, 0x73, 0x65, 0x6e, 0x73, 0x6f, 0x72, 0x79, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e,
	0x74, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x45, 0x6e, 0x72, 0x6f, 0x6c, 0x6c, 0x6d, 0x65,
	0x6e, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x32,
	0x2e, 0x73, 0x65, 0x6e, 0x73, 0x6f, 0x72, 0x79, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e,
	0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x45, 0x6e, 0x72, 0x6f, 0x6c,
	0x6c, 0x6d, 0x65, 0x6e, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x00, 0x12, 0x77, 0x0a, 0x10, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x45, 0x6e,
	0x72, 0x6f, 0x6c, 0x6c, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x32, 0x2e, 0x73, 0x65, 0x6e, 0x73, 0x6f,
	0x72, 0x79, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65,
	0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x45, 0x6e, 0x72, 0x6f, 0x6c,
	0x6c, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2d, 0x2e, 0x73,
	0x65, 0x6e, 0x73, 0x6f, 0x72, 0x79, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x6d, 0x61,
	0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x45, 0x6e, 0x72, 0x6f, 0x6c, 0x6c, 0x6d,
	0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x86, 0x01,
	0x0a, 0x15, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x45, 0x6e, 0x72, 0x6f, 0x6c, 0x6c, 0x6d, 0x65,
	0x6e, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x37, 0x2e, 0x73, 0x65, 0x6e, 0x73, 0x6f, 0x72,
	0x79, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d,
	0x65, 0x6e, 0x74, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x45, 0x6e, 0x72, 0x6f, 0x6c, 0x6c,
	0x6d, 0x65, 0x6e, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x32, 0x2e, 0x73, 0x65, 0x6e, 0x73, 0x6f, 0x72, 0x79, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76,
	0x31, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x45, 0x6e, 0x72,
	0x6f, 0x6c, 0x6c, 0x6d, 0x65, 0x6e, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x87, 0x01, 0x0a, 0x1a, 0x52, 0x65, 0x6d, 0x6f, 0x76,
	0x65, 0x45, 0x6e, 0x72, 0x6f, 0x6c, 0x6c, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x46, 0x72, 0x6f, 0x6d,
	0x47, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x33, 0x2e, 0x73, 0x65, 0x6e, 0x73, 0x6f, 0x72, 0x79, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e,
	0x74, 0x2e, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x45, 0x6e, 0x72, 0x6f, 0x6c, 0x6c, 0x6d, 0x65,
	0x6e, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x32, 0x2e, 0x73, 0x65, 0x6e,
	0x73, 0x6f, 0x72, 0x79, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x6d, 0x61, 0x6e, 0x61,
	0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x45, 0x6e, 0x72, 0x6f, 0x6c, 0x6c, 0x6d, 0x65, 0x6e,
	0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00,
	0x42, 0x8d, 0x01, 0x0a, 0x21, 0x61, 0x69, 0x2e, 0x73, 0x65, 0x6e, 0x73, 0x6f, 0x72, 0x79, 0x63,
	0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x6d, 0x61, 0x6e, 0x61,
	0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x42, 0x25, 0x53, 0x65, 0x6e, 0x73, 0x6f, 0x72, 0x79, 0x41,
	0x70, 0x69, 0x56, 0x31, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x45, 0x6e,
	0x72, 0x6f, 0x6c, 0x6c, 0x6d, 0x65, 0x6e, 0x74, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a,
	0x3f, 0x67, 0x69, 0x74, 0x6c, 0x61, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x73, 0x65, 0x6e, 0x73,
	0x6f, 0x72, 0x79, 0x2d, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2f, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72,
	0x2f, 0x74, 0x69, 0x74, 0x61, 0x6e, 0x2e, 0x67, 0x69, 0x74, 0x2f, 0x70, 0x6b, 0x67, 0x2f, 0x61,
	0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74,
	0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_v1_management_enrollment_proto_rawDescOnce sync.Once
	file_v1_management_enrollment_proto_rawDescData = file_v1_management_enrollment_proto_rawDesc
)

func file_v1_management_enrollment_proto_rawDescGZIP() []byte {
	file_v1_management_enrollment_proto_rawDescOnce.Do(func() {
		file_v1_management_enrollment_proto_rawDescData = protoimpl.X.CompressGZIP(file_v1_management_enrollment_proto_rawDescData)
	})
	return file_v1_management_enrollment_proto_rawDescData
}

var file_v1_management_enrollment_proto_msgTypes = make([]protoimpl.MessageInfo, 12)
var file_v1_management_enrollment_proto_goTypes = []interface{}{
	(*GetEnrollmentsRequest)(nil),           // 0: sensory.api.v1.management.GetEnrollmentsRequest
	(*GetEnrollmentsResponse)(nil),          // 1: sensory.api.v1.management.GetEnrollmentsResponse
	(*EnrollmentResponse)(nil),              // 2: sensory.api.v1.management.EnrollmentResponse
	(*GetEnrollmentGroupsResponse)(nil),     // 3: sensory.api.v1.management.GetEnrollmentGroupsResponse
	(*EnrollmentGroupResponse)(nil),         // 4: sensory.api.v1.management.EnrollmentGroupResponse
	(*CreateEnrollmentGroupRequest)(nil),    // 5: sensory.api.v1.management.CreateEnrollmentGroupRequest
	(*AppendEnrollmentGroupRequest)(nil),    // 6: sensory.api.v1.management.AppendEnrollmentGroupRequest
	(*DeleteEnrollmentRequest)(nil),         // 7: sensory.api.v1.management.DeleteEnrollmentRequest
	(*DeleteEnrollmentGroupRequest)(nil),    // 8: sensory.api.v1.management.DeleteEnrollmentGroupRequest
	(*UpdateEnrollmentRequest)(nil),         // 9: sensory.api.v1.management.UpdateEnrollmentRequest
	(*UpdateEnrollmentGroupRequest)(nil),    // 10: sensory.api.v1.management.UpdateEnrollmentGroupRequest
	(*RemoveEnrollmentsRequest)(nil),        // 11: sensory.api.v1.management.RemoveEnrollmentsRequest
	(*timestamppb.Timestamp)(nil),           // 12: google.protobuf.Timestamp
	(common.ModelType)(0),                   // 13: sensory.api.common.ModelType
	(*common.CompressionConfiguration)(nil), // 14: sensory.api.common.CompressionConfiguration
}
var file_v1_management_enrollment_proto_depIdxs = []int32{
	2,  // 0: sensory.api.v1.management.GetEnrollmentsResponse.enrollments:type_name -> sensory.api.v1.management.EnrollmentResponse
	12, // 1: sensory.api.v1.management.EnrollmentResponse.createdAt:type_name -> google.protobuf.Timestamp
	12, // 2: sensory.api.v1.management.EnrollmentResponse.updatedAt:type_name -> google.protobuf.Timestamp
	13, // 3: sensory.api.v1.management.EnrollmentResponse.modelType:type_name -> sensory.api.common.ModelType
	14, // 4: sensory.api.v1.management.EnrollmentResponse.compression:type_name -> sensory.api.common.CompressionConfiguration
	4,  // 5: sensory.api.v1.management.GetEnrollmentGroupsResponse.enrollmentGroups:type_name -> sensory.api.v1.management.EnrollmentGroupResponse
	12, // 6: sensory.api.v1.management.EnrollmentGroupResponse.createdAt:type_name -> google.protobuf.Timestamp
	12, // 7: sensory.api.v1.management.EnrollmentGroupResponse.updatedAt:type_name -> google.protobuf.Timestamp
	13, // 8: sensory.api.v1.management.EnrollmentGroupResponse.modelType:type_name -> sensory.api.common.ModelType
	2,  // 9: sensory.api.v1.management.EnrollmentGroupResponse.enrollments:type_name -> sensory.api.v1.management.EnrollmentResponse
	0,  // 10: sensory.api.v1.management.EnrollmentService.GetEnrollments:input_type -> sensory.api.v1.management.GetEnrollmentsRequest
	0,  // 11: sensory.api.v1.management.EnrollmentService.GetEnrollmentGroups:input_type -> sensory.api.v1.management.GetEnrollmentsRequest
	5,  // 12: sensory.api.v1.management.EnrollmentService.CreateEnrollmentGroup:input_type -> sensory.api.v1.management.CreateEnrollmentGroupRequest
	6,  // 13: sensory.api.v1.management.EnrollmentService.AppendEnrollmentGroup:input_type -> sensory.api.v1.management.AppendEnrollmentGroupRequest
	7,  // 14: sensory.api.v1.management.EnrollmentService.DeleteEnrollment:input_type -> sensory.api.v1.management.DeleteEnrollmentRequest
	8,  // 15: sensory.api.v1.management.EnrollmentService.DeleteEnrollmentGroup:input_type -> sensory.api.v1.management.DeleteEnrollmentGroupRequest
	9,  // 16: sensory.api.v1.management.EnrollmentService.UpdateEnrollment:input_type -> sensory.api.v1.management.UpdateEnrollmentRequest
	10, // 17: sensory.api.v1.management.EnrollmentService.UpdateEnrollmentGroup:input_type -> sensory.api.v1.management.UpdateEnrollmentGroupRequest
	11, // 18: sensory.api.v1.management.EnrollmentService.RemoveEnrollmentsFromGroup:input_type -> sensory.api.v1.management.RemoveEnrollmentsRequest
	1,  // 19: sensory.api.v1.management.EnrollmentService.GetEnrollments:output_type -> sensory.api.v1.management.GetEnrollmentsResponse
	3,  // 20: sensory.api.v1.management.EnrollmentService.GetEnrollmentGroups:output_type -> sensory.api.v1.management.GetEnrollmentGroupsResponse
	4,  // 21: sensory.api.v1.management.EnrollmentService.CreateEnrollmentGroup:output_type -> sensory.api.v1.management.EnrollmentGroupResponse
	4,  // 22: sensory.api.v1.management.EnrollmentService.AppendEnrollmentGroup:output_type -> sensory.api.v1.management.EnrollmentGroupResponse
	2,  // 23: sensory.api.v1.management.EnrollmentService.DeleteEnrollment:output_type -> sensory.api.v1.management.EnrollmentResponse
	4,  // 24: sensory.api.v1.management.EnrollmentService.DeleteEnrollmentGroup:output_type -> sensory.api.v1.management.EnrollmentGroupResponse
	2,  // 25: sensory.api.v1.management.EnrollmentService.UpdateEnrollment:output_type -> sensory.api.v1.management.EnrollmentResponse
	4,  // 26: sensory.api.v1.management.EnrollmentService.UpdateEnrollmentGroup:output_type -> sensory.api.v1.management.EnrollmentGroupResponse
	4,  // 27: sensory.api.v1.management.EnrollmentService.RemoveEnrollmentsFromGroup:output_type -> sensory.api.v1.management.EnrollmentGroupResponse
	19, // [19:28] is the sub-list for method output_type
	10, // [10:19] is the sub-list for method input_type
	10, // [10:10] is the sub-list for extension type_name
	10, // [10:10] is the sub-list for extension extendee
	0,  // [0:10] is the sub-list for field type_name
}

func init() { file_v1_management_enrollment_proto_init() }
func file_v1_management_enrollment_proto_init() {
	if File_v1_management_enrollment_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_v1_management_enrollment_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetEnrollmentsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_management_enrollment_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetEnrollmentsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_management_enrollment_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EnrollmentResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_management_enrollment_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetEnrollmentGroupsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_management_enrollment_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EnrollmentGroupResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_management_enrollment_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateEnrollmentGroupRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_management_enrollment_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AppendEnrollmentGroupRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_management_enrollment_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteEnrollmentRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_management_enrollment_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteEnrollmentGroupRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_management_enrollment_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateEnrollmentRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_management_enrollment_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateEnrollmentGroupRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_management_enrollment_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RemoveEnrollmentsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_v1_management_enrollment_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   12,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_v1_management_enrollment_proto_goTypes,
		DependencyIndexes: file_v1_management_enrollment_proto_depIdxs,
		MessageInfos:      file_v1_management_enrollment_proto_msgTypes,
	}.Build()
	File_v1_management_enrollment_proto = out.File
	file_v1_management_enrollment_proto_rawDesc = nil
	file_v1_management_enrollment_proto_goTypes = nil
	file_v1_management_enrollment_proto_depIdxs = nil
}
